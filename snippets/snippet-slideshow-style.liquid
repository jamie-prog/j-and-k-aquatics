{%- unless blockID contains sectionID -%}
	{%- assign blockID = blockID | prepend: ' ' | prepend: sectionID -%}
{%- endunless -%}

{%- case type -%}
  	{%- when 'style' 			-%}{%- comment -%}	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * * * *{%- endcomment-%}
		{%- capture block_css -%}
	    	{%- liquid
	    	 	assign __pos  	 	= block.settings.position
	    	 	assign __hor_align  = block.settings.align | default: 'center' | replace: 'left', 'flex-start' | replace: 'right', 'flex-end'
	    	 	assign __ver_align  = block.settings.align
	    	-%}

			{%- comment -%}
				**
				* Slide CSS
				*
			{%- endcomment-%}
			{%- render 'css-resp', classID: blockID, nextClassID: ' .slide-content-inner.overlay-ui', css_value: __pos, type: 'position' -%}
			{%- render 'css-resp', classID: blockID, nextClassID: ' .slide-content-wrapper', css_value: __ver_align, css_property: 'text-align' -%}
			{%- render 'css-resp', classID: blockID, nextClassID: ' .slide-content-inner.content_direction-horizontal', css_value: __hor_align, css_property: 'justify-content' -%}

			{%- render 'snippet-slideshow-style', blockID: blockID, block: block, type: 'paragraph' -%}
			{%- render 'snippet-slideshow-style', blockID: blockID, block: block, type: 'button' -%}
			{%- render 'snippet-slideshow-style', blockID: blockID, block: block, type: 'svg' -%}
			{%- render 'snippet-slideshow-style', blockID: blockID, block: block, type: 'product', blockID: blockID -%}
			{%- render 'snippet-slideshow-style', blockID: blockID, block: block, type: 'sub_image' -%}

	    {%- endcapture -%}{%- assign section_css = section_css | append: block_css -%}

	{%- when 'content_wrapper'  -%}{%- comment -%}	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * * * *{%- endcomment-%}

    	{%- liquid
    	 	assign __pos  	 	 = block.settings.position
    	 	assign __hor_align  = block.settings.align | default: 'center' | replace: 'left', 'flex-start' | replace: 'right', 'flex-end'
    	 	assign __ver_align  = block.settings.align
    	-%}

		{%- comment -%}
			**
			* Slide CSS
			*
		{%- endcomment-%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .slide-content-inner.overlay-ui', css_value: __pos, type: 'position' -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .slide-content-wrapper', css_value: __ver_align, css_property: 'text-align' -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .slide-content-inner.content_direction-horizontal', css_value: __hor_align, css_property: 'justify-content' -%}


  	{%- when 'paragraph'	-%}{%- comment -%}	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * * * *{%- endcomment-%}

		{%- for i in (1..2) -%}
			{%- liquid				
				assign __text_fs 		= 'text_fs_' | append: i
				assign __text_lh 		= 'text_lh_' | append: i
				assign __text_cl 		= 'text_cl_' | append: i
				assign __text_fw 		= 'text_fw_' | append: i
				assign __text_margin 	= 'text_' | append: i | append: '_margin'
				
				assign __text_fs 		= block.settings[__text_fs]
				assign __text_lh 		= block.settings[__text_lh]
				assign __text_cl 		= block.settings[__text_cl] | default: 'rgba(0,0,0,0)'
				assign __text_fw 		= block.settings[__text_fw]
				assign __text_margin 	= block.settings[__text_margin]
			-%}
			{%- capture textID -%}{{blockID}} .content-text-{{i}}{%- endcapture -%}

			{%- capture blockCSS -%}
				{%- if __text_fw > 0 -%}font-weight: {{__text_fw}};{%- endif -%}
				{%- unless __text_cl == 'rgba(0,0,0,0)' -%}color: {{__text_cl}};{%- endunless -%}
				{%- render 'css-resp', type: 'value', showFirst: true, css_value: __text_fs, css_property: 'font-size' -%}
				{%- render 'css-resp', type: 'value', showFirst: true, css_value: __text_margin, css_property: 'margin' -%}
				{%- render 'css-resp', type: 'value', showFirst: true, css_value: __text_lh, css_property: 'line-height' -%}
			{%- endcapture -%}

			{%- render 'css-resp', classID: textID, css_values: blockCSS -%}
			{%- render 'css-resp', classID: textID, showLast: true, css_value: __text_fs, css_property: 'font-size' -%}
			{%- render 'css-resp', classID: textID, showLast: true, css_value: __text_margin, css_property: 'margin' -%}
			{%- render 'css-resp', classID: textID, showLast: true, css_value: __text_lh, css_property: 'line-height' -%}


			{%- comment -%}
				**********
				*
				* ANIMATION
				*
				*****
			{%- endcomment-%}
			{%- liquid
				assign __anim_name 		= 'text_anim_' | append: i
				assign __anim_time 		= 'text_anim_timeset_' | append: i
				assign __anim_name 		= block.settings[__anim_name] | default: 'none'
				assign __anim_time 		= block.settings[__anim_time] | split: '|'
			-%}
			{%- if __anim_name != 'none' -%}
				{%- capture animID -%}{{blockID}}.tns-slide-active .lazyloaded + .slide-content-wrapper .content-text-{{i}}{%- endcapture -%}
				{%- capture blockCSS -%}
					animation-name: {{		__anim_name | strip }};
					animation-delay: 	{{	__anim_time[0] | strip | default: 1000 | append: 'ms' }};
					animation-duration: {{	__anim_time[1] | strip | default: 1000 | append: 'ms' }};
				{%- endcapture -%}
				{%- render 'css-resp', classID: animID, css_values: blockCSS -%}
			{%- endif -%}

		{%- endfor -%}

  	{%- when 'button'		-%}{%- comment -%}	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * * * *{%- endcomment-%}

		{%- liquid
			assign __btn_cl 				= block.settings.btn_cl | default: 'rgba(0,0,0,0)'
			assign __btn_bg_cl 				= block.settings.btn_bg_cl | default: 'rgba(0,0,0,0)'
			assign __btn_border_cl 			= block.settings.btn_border_cl | default: 'rgba(0,0,0,0)'
			assign __btn_hover_cl 			= block.settings.btn_hover_cl | default: 'rgba(0,0,0,0)'
			assign __btn_hover_bg_cl 		= block.settings.btn_hover_bg_cl | default: 'rgba(0,0,0,0)'
			assign __btn_hover_border_cl 	= block.settings.btn_hover_border_cl | default: 'rgba(0,0,0,0)'
			assign __btn_fw 				= block.settings.btn_fw
			assign __btn_padding 			= block.settings.btn_padding
			assign __btn_fs 				= block.settings.btn_fs
			assign __btn_radius 			= block.settings.btn_radius
		-%}

		{%- capture blockCSS -%}
			{%- unless __btn_cl 		== 'rgba(0,0,0,0)'	-%}color: {{__btn_cl}};{%- endunless -%}
			{%- unless __btn_bg_cl 		== 'rgba(0,0,0,0)'	-%}background-color: {{__btn_bg_cl}};{%- endunless -%}
			{%- unless __btn_border_cl 	== 'rgba(0,0,0,0)'	-%}border-color: {{__btn_border_cl}};{%- endunless -%}
			{%- if __btn_fw > 0 							-%}font-weight: {{__btn_fw}};{%- endif -%}
			{%- render 'css-resp', type: 'value', showFirst: true, css_value: __btn_padding, css_property: 'padding' -%}
			{%- render 'css-resp', type: 'value', showFirst: true, css_value: __btn_fs, css_property: 'font-size' -%}
			{%- render 'css-resp', type: 'value', showFirst: true, css_value: __btn_radius, css_property: 'border-radius' -%}
		{%- endcapture -%}

		{%- render 'css-resp', classID: blockID, nextClassID: ' .btn-slide', css_values: blockCSS -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .btn-slide', showLast: true, css_value: __btn_padding -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .btn-slide', showLast: true, css_value: __btn_fs, css_property: 'font-size' -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .btn-slide', showLast: true, css_value: __btn_radius, css_property: 'border-radius' -%}


	    {%- comment -%}
	    	**********
	    	*
	    	* ANIMATION
	    	*
	    	*****
	    {%- endcomment-%}
		{%- assign __anim_name = block.settings.btn_anim | default: 'none' -%}
		{%- assign __anim_time  = block.settings.btn_anim_timeset | split: '|' -%}

    	{%- if __anim_name != 'none' -%}
			{%- capture animID -%}{{blockID}}.tns-slide-active .lazyloaded + .slide-content-wrapper .content-button{%- endcapture -%}
			{%- capture blockCSS -%}
				animation-name: {{		__anim_name | strip }};
				animation-delay: 	{{	__anim_time[0] | strip | default: 1000 | append: 'ms' }};
				animation-duration: {{	__anim_time[1] | strip | default: 1000 | append: 'ms' }};
			{%- endcapture -%}
			{%- render 'css-resp', classID: animID, css_values: blockCSS -%}
		{%- endif -%}

		{%- comment -%}
	      **
	      * Button Hover
	      *
	    {%- endcomment-%}
	    {%- capture firstValues -%}
	      {%- unless __btn_hover_cl         == 'rgba(0,0,0,0)' -%}color: {{__btn_hover_cl}};{%- endunless -%}
	      {%- unless __btn_hover_bg_cl      == 'rgba(0,0,0,0)' -%}background-color: {{__btn_hover_bg_cl}};{%- endunless -%}
	      {%- unless __btn_hover_border_cl  == 'rgba(0,0,0,0)' -%}border-color: {{__btn_hover_border_cl}};{%- endunless -%}
	    {%- endcapture -%}

	    {%- render 'css-resp', classID: blockID, nextClassID: ' .btn-slide:hover', css_values: firstValues -%}



  	{%- when 'product'		-%}{%- comment -%}	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * * * *{%- endcomment-%}
		{%- liquid
			assign __price_cl 					= block.settings.price_cl | default: 'rgba(0,0,0,0)'
			assign __price_compare_cl 			= block.settings.price_compare_cl | default: 'rgba(0,0,0,0)'
			assign __price_fw					= block.settings.price_fw
			assign __price_compare_fw			= block.settings.price_compare_fw
			assign __sale_bg_color 				= block.settings.sale_bg_color | default: 'rgba(0,0,0,0)'
			assign __sale_color 				= block.settings.sale_color | default: 'rgba(0,0,0,0)'
			assign __sale_fw					= block.settings.sale_fw
			assign __price_fs	 				= block.settings.price_fs
			assign __price_cp_fs 				= block.settings.price_compare_fs
		-%}

		{%- capture blockCSS -%}
			{%- unless __price_cl == 'rgba(0,0,0,0)' -%}color: {{__price_cl}};{%- endunless -%}
			{%- if __price_fw > 0 -%}font-weight: {{__price_fw}};{%- endif -%}
			{%- render 'css-resp', type: 'value', showFirst: true, css_value: __price_fs, css_property: 'font-size' -%}
		{%- endcapture -%}

		{%- render 'css-resp', classID: blockID, nextClassID: ' .price', css_values: blockCSS -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .price', showLast: true, css_value: __price_fs, css_property: 'font-size' -%}

		{%- capture blockCSS -%}
			{%- unless __price_compare_cl == 'rgba(0,0,0,0)' -%}color: {{__price_compare_cl}};{%- endunless -%}
			{%- if __price_compare_fw > 0 -%}font-weight: {{__price_compare_fw}};{%- endif -%}
			{%- render 'css-resp', type: 'value', showFirst: true, css_value: __price_cp_fs, css_property: 'font-size' -%}
		{%- endcapture -%}

		{%- render 'css-resp', classID: blockID, nextClassID: ' .price-compare', css_values: blockCSS -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .price-compare', showLast: true, css_value: __price_cp_fs, css_property: 'font-size' -%}

		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-product', css_value: block.settings.product_margin, css_property: 'margin' -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-sale-label.overlay-ui', css_value: block.settings.product_label_position, type: 'position' -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-sale-label.overlay-ui', css_value: block.settings.sale_size, css_property: 'width' -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-sale-label.overlay-ui', css_value: block.settings.sale_size, css_property: 'height' -%}

		{%- capture blockCSS -%}
			{%- if __sale_fw > 0 							-%}font-weight: {{__sale_fw}};{%- endif -%}
			{%- unless __sale_color 	== 'rgba(0,0,0,0)' 	-%}color: {{__sale_color}};{%- endunless -%}
			{%- unless __sale_bg_color 	== 'rgba(0,0,0,0)' 	-%}background-color: {{__sale_bg_color}};{%- endunless -%}

			{%- render 'css-resp', type: 'value', showFirst: true, css_value: block.settings.sale_fs, css_property: 'font-size' -%}
		{%- endcapture -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-sale-label', css_values: blockCSS -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-sale-label', showLast: true, css_value: block.settings.sale_fs, css_property: 'font-size' -%}



	    {%- comment -%}
	    	**********
	    	*
	    	* ANIMATION
	    	*
	    	*****
	    {%- endcomment-%}
    	{%- assign __anim_name  = block.settings.product_anim | default: 'none' -%}
    	{%- assign __anim_time = block.settings.product_anim_timeset | split: '|' -%}

		{%- if __anim_name != 'none' -%}
			{%- capture animID -%}{{blockID}}.tns-slide-active .lazyloaded + .slide-content-wrapper .content-product{%- endcapture -%}
			{%- capture blockCSS -%}
				animation-name: {{		__anim_name | strip }};
				animation-delay: 	{{	__anim_time[0] | strip | default: 1000 | append: 'ms' }};
				animation-duration: {{	__anim_time[1] | strip | default: 1000 | append: 'ms' }};
			{%- endcapture -%}
			{%- render 'css-resp', classID: animID, css_values: blockCSS -%}
		{%- endif -%}


		{%- assign __anim_name = block.settings.label_anim | default: 'none' -%}
		{%- assign __anim_time = block.settings.label_anim_timeset | split: '|' -%}

		{%- if __anim_name != 'none' -%}
			{%- capture animID -%}{{blockID}}.tns-slide-active .lazyloaded + .slide-content-wrapper +{%- endcapture -%}
			{%- capture blockCSS -%}
				animation-name: {{		__anim_name | strip }};
				animation-delay: 	{{	__anim_time[0] | strip | default: 1000 | append: 'ms' }};
				animation-duration: {{	__anim_time[1] | strip | default: 1000 | append: 'ms' }};
			{%- endcapture -%}
			{%- render 'css-resp', classID: animID, nextClassID: ' .content-sale-label', css_values: blockCSS -%}
		{%- endif -%}

  	{%- when 'svg'			-%}{%- comment -%}	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * * * *{%- endcomment-%}

		{%- liquid
			assign __svg_cl 		= block.settings.svg_cl | default: 'rgba(0,0,0,0)'
			assign __svg_fw 		= block.settings.svg_fw
			assign __svg_fs 		= block.settings.svg_fs
			assign __svg_margin 	= block.settings.svg_margin
		-%}
		{%- capture blockCSS -%}
			{%- if __svg_fw > 0 					-%}font-weight: {{__svg_fw}};{%- endif -%}
			{%- unless __svg_cl == 'rgba(0,0,0,0)' 	-%}color: {{__svg_cl}};{%- endunless -%}
			{%- render 'css-resp', type: 'value', showFirst: true, css_value: __svg_fs, css_property: 'font-size' -%}
			{%- render 'css-resp', type: 'value', showFirst: true, css_value: __svg_margin, css_property: 'margin' -%}
		{%- endcapture -%}

		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-svg', css_values: blockCSS -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-svg', showLast: true, css_value: __svg_fs, css_property: 'font-size' -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-svg', showLast: true, css_value: __svg_margin, css_property: 'margin' -%}



	    {%- comment -%}
	    	**********
	    	*
	    	* ANIMATION
	    	*
	    	*****
	    {%- endcomment-%}
		{%- assign __anim_name = block.settings.svg_anim | default: 'none' -%}
		{%- assign __anim_time  = block.settings.svg_anim_timeset | split: '|' -%}

    	{%- if __anim_name != 'none' -%}
			{%- capture animID -%}{{blockID}}.tns-slide-active .lazyloaded + .slide-content-wrapper .content-svg{%- endcapture -%}
			{%- capture blockCSS -%}
				animation-name: {{		__anim_name | strip }};
				animation-delay: 	{{	__anim_time[0] | strip | default: 1000 | append: 'ms' }};
				animation-duration: {{	__anim_time[1] | strip | default: 1000 | append: 'ms' }};
			{%- endcapture -%}
			{%- render 'css-resp', classID: animID, css_values: blockCSS -%}
		{%- endif -%}

	{%- when 'sub_image'	-%}{%- comment -%}	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * *	* * * * * *{%- endcomment-%}

		{%- liquid
			assign image_margin = block.settings.image_margin
			assign max_width 	= block.settings.image_max_w
		-%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-image .image__style', css_value: max_width, css_property: 'max-width' -%}
		{%- render 'css-resp', classID: blockID, nextClassID: ' .content-image', css_value: image_margin, css_property: 'margin' -%}

{%- endcase -%}